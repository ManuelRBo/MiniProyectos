{"version":3,"sources":["app.js","utilidades/calcularEdad.js","utilidades/errorInvalid.js","utilidades/errorVacios.js","utilidades/fechaIncorrecta.js"],"names":["boton","document","getElementById","dia","mes","anio","arrayEntradas","entradas","getElementsByClassName","errorTexto","resultadoDia","resultadoMes","resultadoAños","addEventListener","e","preventDefault","agregarErrorVacio","fechaInvalida","fechaIncorrecta","quitarErrorVacios","calcularEdad","diaMeses","fechaActual","Date","diaActual","getDate","mesActual","getMonth","anioActual","getFullYear","value","textContent","añoActual","forEach","element","indice","diaInvalido","mesInvalido","anioInvalido","classList","add","hayErrores","remove","diasMes"],"mappings":"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","file":"bundle.js","sourcesContent":["// Objetivo: Validar fecha de nacimiento y mostrar edad en años, meses y días\r\nconst boton = document.getElementById('boton');\r\nconst dia = document.getElementById('day');\r\nconst mes = document.getElementById('month');\r\nconst anio = document.getElementById('year');\r\nconst arrayEntradas = [dia, mes, anio];\r\nconst entradas = document.getElementsByClassName('entrada');\r\nconst errorTexto = document.getElementsByClassName('error-texto');\r\nlet resultadoDia = document.getElementById('diaResultado');\r\nlet resultadoMes = document.getElementById('mesResultado');\r\nlet resultadoAños = document.getElementById('anioResultado');\r\n\r\nboton.addEventListener('click', function(e){\r\n    e.preventDefault();\r\n    if(agregarErrorVacio() == true){\r\n        quitarErrorVacios();\r\n    }else if(fechaInvalida() == true){\r\n        quitarErrorVacios();\r\n    }else if(fechaIncorrecta() == true){\r\n        quitarErrorVacios();\r\n    }else{\r\n        calcularEdad();\r\n    }\r\n})\r\n","const diaMeses = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n// Objetivo: calcular la edad de una persona\r\nfunction calcularEdad() {\r\n  const fechaActual = new Date();\r\n  const diaActual = fechaActual.getDate();\r\n  const mesActual = fechaActual.getMonth() + 1;\r\n  const anioActual = fechaActual.getFullYear();\r\n\r\n  if (diaActual == dia.value && mesActual == mes.value) {\r\n    resultadoAños.textContent = anioActual - anio.value;\r\n    resultadoMes.textContent = 0;\r\n    resultadoDia.textContent = 0;\r\n  } else if (dia.value > diaActual && mes.value > mesActual){\r\n    resultadoAños.textContent = anioActual - anio.value - 1;\r\n  }\r\n}\r\n","// Objetivo: Validar que el usuario no ingrese una fecha invalida\r\nfunction fechaInvalida() {\r\n  let fechaInvalida = false;\r\n  const fecha = new Date();\r\n  const añoActual = fecha.getFullYear();\r\n  arrayEntradas.forEach((element, indice) => {\r\n    if(indice == 0 && diaInvalido(element, indice) == true){\r\n        fechaInvalida = true;\r\n    }\r\n\r\n    if(indice == 1 && mesInvalido(element, indice) == true){\r\n        fechaInvalida = true;\r\n    }\r\n\r\n    if(indice == 2 && anioInvalido(element, indice, añoActual) == true){\r\n        fechaInvalida = true;\r\n    }\r\n  });\r\n\r\n  return fechaInvalida;\r\n}\r\n\r\n// Objetivo: Validar que el usuario introduzca un dia valido\r\nfunction diaInvalido(element, indice) {\r\n  let diaInvalido = false;\r\n  if (element.value < 1 || element.value > 31) {\r\n    diaInvalido = true;\r\n    entradas[indice].classList.add(\"error\");\r\n    errorTexto[indice].textContent = \"Must be a valid day\";\r\n  }\r\n  return diaInvalido;\r\n}\r\n\r\n\r\n// Objetivo: Validar que el usuario introduzca un mes valido\r\nfunction mesInvalido(element, indice) {\r\n  let mesInvalido = false;\r\n  if (element.value < 1 || element.value > 12) {\r\n    mesInvalido = true;\r\n    entradas[indice].classList.add(\"error\");\r\n    errorTexto[indice].textContent = \"Must be a valid month\";\r\n  }\r\n  return mesInvalido;\r\n}\r\n\r\n// Objetivo: Validar que el usuario introduzca un año valido\r\nfunction anioInvalido(element, indice, añoActual) {\r\n  let anioInvalido = false;\r\n  if (element.value < 1900) {\r\n    anioInvalido = true;\r\n    entradas[indice].classList.add(\"error\");\r\n    errorTexto[indice].textContent = \"Must be greater than 1900\";\r\n  }else if(element.value > añoActual){\r\n    anioInvalido = true;\r\n    entradas[indice].classList.add(\"error\");\r\n    errorTexto[indice].textContent = \"Must be in the past\";\r\n  }\r\n  return anioInvalido;\r\n}","// Objetivo: validar que los campos no esten vacios\r\nfunction agregarErrorVacio() {\r\n  let hayErrores = false;\r\n  arrayEntradas.forEach((element, indice) => {\r\n    if (element.value == \"\") {\r\n      entradas[indice].classList.add('error');\r\n      errorTexto[indice].textContent = \"This field is required\";\r\n      hayErrores = true;\r\n    }\r\n  });\r\n  return hayErrores;\r\n}\r\n\r\n\r\n// Objetivo: quitar los errores cuando el usuario ingrese un valor\r\nfunction quitarErrorVacios(){\r\n  arrayEntradas.forEach((element, indice) => {\r\n    element.addEventListener('input', function(){\r\n      entradas[indice].classList.remove('error');\r\n      errorTexto[indice].textContent = '';\r\n    });\r\n  });\r\n}\r\n","const diasMes = [31,28,31,30,31,30,31,31,30,31,30,31];\r\n\r\nfunction fechaIncorrecta() {\r\n    let fechaIncorrecta = false;\r\n    if(dia.value > diasMes[mes.value-1] || dia.value < 1){\r\n        entradas[0].classList.add(\"error\");\r\n        entradas[1].classList.add(\"error\");\r\n        entradas[2].classList.add(\"error\");\r\n        errorTexto[0].textContent = \"Must be a valid date\";\r\n        fechaIncorrecta = true;\r\n    }\r\n    return fechaIncorrecta;\r\n}"]}